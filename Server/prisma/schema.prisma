// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "foreignKeys"
}

// User model
model user {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  password          String
  role              Role     @default(EMPLOYEE)
  hashRt            String?
  addedBy           String?
  updatedBy         String?
  password_reset    Boolean  @default(false)
  disabled_by_admin Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  shift             shift[]

  @@map("user")
}

// Player model
model Player {
  id          String        @id @default(uuid())
  name        String
  iGN         String
  facebookURL String        @unique
  image       String?
  note        String?
  fireKirin   Boolean       @default(false)
  orionStars  Boolean       @default(false)
  gameVault   Boolean       @default(false)
  pandaMaster Boolean       @default(false)
  ultraPanda  Boolean       @default(false)
  vbLink      Boolean       @default(false)
  milkyWay    Boolean       @default(false)
  juwa        Boolean       @default(false)
  addedBy     String?
  updatedBy   String?
  Transaction Transaction[]
  createdAt   DateTime      @default(now())
}

// Shift model
model shift {
  id             String           @id @default(uuid())
  startTime      String?
  endTime        String?
  Employee       user             @relation(fields: [employeeId], references: [id])
  employeeId     String
  CashManagement CashManagement[]
  Transaction    Transaction[]

  @@index([employeeId])
}

model CashManagement {
  id            String       @id @default(uuid())
  Shift         shift        @relation(fields: [shiftId], references: [id])
  shiftId       String       @unique
  FireKirin     FireKirin?   @relation(fields: [fireKirinId], references: [id])
  fireKirinId   String?
  OrionStars    OrionStars?  @relation(fields: [orionStarsId], references: [id])
  orionStarsId  String?
  GameVault     GameVault?   @relation(fields: [gameVaultId], references: [id])
  gameVaultId   String?
  PandaMaster   PandaMaster? @relation(fields: [pandaMasterId], references: [id])
  pandaMasterId String?
  UltraPanda    UltraPanda?  @relation(fields: [ultraPandaId], references: [id])
  ultraPandaId  String?
  VbLink        VbLink?      @relation(fields: [vbLinkId], references: [id])
  vbLinkId      String?
  MilkyWay      MilkyWay?    @relation(fields: [milkyWayId], references: [id])
  milkyWayId    String?
  Juwa          Juwa?        @relation(fields: [juwaId], references: [id])
  juwaId        String?
}

model FireKirin {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model OrionStars {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model GameVault {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model PandaMaster {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model UltraPanda {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model VbLink {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model MilkyWay {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model Juwa {
  id              String           @id @default(uuid())
  openingBalance  Int              @default(0)
  closingBalance  Int              @default(0)
  expectedBalance Int              @default(0)
  CashManagement  CashManagement[]
  Transaction     Transaction[]
}

model Transaction {
  id              String          @id @default(uuid())
  amount          Int             @default(0)
  bonus           Int             @default(0)
  tip             Int             @default(0)
  totalAmount     Int             @default(0)
  TransactionType TransactionType
  TransactionFor  GameType
  note            String?
  BillImage       BillImage[]
  Player          Player?         @relation(fields: [playerId], references: [id])
  playerId        String?
  createdBy       String?
  createdAt       DateTime        @default(now())
  FireKirin       FireKirin?      @relation(fields: [fireKirinId], references: [id])
  fireKirinId     String?
  OrionStars      OrionStars?     @relation(fields: [orionStarsId], references: [id])
  orionStarsId    String?
  GameVault       GameVault?      @relation(fields: [gameVaultId], references: [id])
  gameVaultId     String?
  PandaMaster     PandaMaster?    @relation(fields: [pandaMasterId], references: [id])
  pandaMasterId   String?
  UltraPanda      UltraPanda?     @relation(fields: [ultraPandaId], references: [id])
  ultraPandaId    String?
  VbLink          VbLink?         @relation(fields: [vbLinkId], references: [id])
  vbLinkId        String?
  MilkyWay        MilkyWay?       @relation(fields: [milkyWayId], references: [id])
  milkyWayId      String?
  Juwa            Juwa?           @relation(fields: [juwaId], references: [id])
  juwaId          String?
  shiftId         String?
  Shift           shift?          @relation(fields: [shiftId], references: [id])
}

model BillImage {
  id    String @id @default(uuid())
  image String

  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?
}

enum TransactionType {
  CASH_IN
  FREE_PLAY
  CASH_OUT
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum GameType {
  FIRE_KIRIN
  ORION_STARS
  GAME_VAULT
  PANDA_MASTER
  ULTRA_PANDA
  VB_LINK
  MILKY_WAY
  JUWA
}
